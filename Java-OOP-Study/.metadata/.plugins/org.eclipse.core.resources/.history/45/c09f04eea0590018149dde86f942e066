package com.study.my;

import static org.junit.Assert.*;

import org.junit.Test;

public class MyStringTest {

	@Test
	public void testEqualsString() {
		// 传入自己
		MyString str = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		assertEquals(true, str.equalsString(str));
		// 大小写
		MyString str1 = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		MyString str2 = new MyString(new char[] { 'P', 'h', 'r', 'e', 'e' });
		assertEquals(false, str1.equalsString(str2));
		// str3比str4多
		MyString str3 = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e', 'e' });
		MyString str4 = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		assertEquals(false, str3.equalsString(str4));
		// str5比str6少
		MyString str5 = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		MyString str6 = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e', 'e' });
		assertEquals(false, str5.equalsString(str6));

		// 相等
		MyString str7 = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		MyString str8 = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		assertEquals(true, str7.equalsString(str8));
		

	}

	@Test
	public void testArraysToString() {
		//输出成[a,b,c,d]形式
		MyString str = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		MyString finalStr = new MyString(new char[]{'[','p',',','h',',','r',',' ,'e',',', 'e',']'});
		MyString arrayStr = new MyString(str.arraysToString());
		assertEquals(true, finalStr.equalsString(arrayStr));
	}
	
	@Test 
	public void testSubString() {
		//截取一段字符串
		MyString str = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		MyString finalStr = new MyString(new char[] {  'h', 'r', 'e' });
		MyString arrayStr = new MyString(str.subString(1, 3));
		assertEquals(true, finalStr.equalsString(arrayStr));
	}
	
	@Test
	public void testStrCopy() {
		
		MyString str = new MyString(new char[] { 'p', 'h', 'r', 'e', 'e' });
		MyString str2 = new MyString(new char[] { 't', 't', 'e', 's', 't' });
		System.out.println(str.value);
		str.strCopy(str, str2, 1, 3, 1);
		System.out.println(str.value);
		
	}
}
